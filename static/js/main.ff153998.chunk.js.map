{"version":3,"sources":["api.js","redux/contacts/actions.js","redux/contacts/operations.js","redux/contacts/reducer.js","redux/contacts/selectors.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-slice.js","redux/store.js","pages/HomePage/HomePage.jsx","components/Navigation/Navigation.jsx","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.jsx","components/AuthNav/AuthNav.jsx","components/AppBar/AppBar.js","pages/Register/fields-register.js","pages/Register/Register.jsx","pages/Login/fields.js","pages/Login/Login.jsx","components/ContactsList/ContactItem.jsx","components/ContactsList/ContactsList.jsx","components/Phonebook/formData.js","components/Form/Form.jsx","components/Filter/Filter.jsx","components/Phonebook/Phonebook.jsx","pages/Contacts/Contacts.jsx","components/PrivateRoute.js","components/PublicRoute.js","App.js","index.js","pages/Register/Register.module.css","pages/Login/Login.module.css","components/Form/Form.module.css","components/ContactsList/ContactsList.module.css","components/Navigation/Navigation.module.css","components/UserMenu/UserMenu.module.css","components/AuthNav/AuthNav.module.css","components/Phonebook/Phonebook.module.css","pages/HomePage/HomePage.module.css","components/AppBar/AppBar.module.css","components/Filter/Filter.module.css","pages/Contacts/Contacts.module.css"],"names":["instance","axios","create","baseURL","token","set","defaults","headers","common","Authorization","unset","getAllContacts","a","get","data","addNewContact","newContact","post","removeContact","id","delete","getPhonebookContactsRequest","createAction","getPhonebookContactsSuccess","getPhonebookContactsError","addToPhonebookRequest","addToPhonebookSuccess","addToPhonebookError","removeFromPhonebookRequest","removeFromPhonebookSuccess","removeFromPhonebookError","filterPhonebook","getPhonebook","getContacts","dispatch","getState","auth","api","actions","addToPhonebook","addContacts","removeFromPhonebook","itemsReducer","createReducer","store","payload","push","_","idx","findIndex","splice","filterReducer","error","combineReducers","items","filter","contacts","getFilter","getFilterList","createSelector","filterItem","toLowerCase","item","name","includes","register","createAsyncThunk","credentials","Notify","failure","response","status","logIn","logOut","fetchCurrentUser","thunkAPI","state","persistedToken","rejectWithValue","operations","authSelectors","getIsLoggedIn","isLoggedIn","getUsername","user","getIsFetchingCurrent","isFetchingCurrentUser","authSlice","createSlice","initialState","email","extraReducers","authOperations","fulfilled","action","pending","rejected","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","configureStore","reducer","persistReducer","authReducer","devTools","process","persistor","persistStore","HomeView","Box","className","styles","container","Navigation","useSelector","to","exact","link","activeClassName","activeLink","UserMenu","useDispatch","avatar","defaultAvatar","Container","src","alt","Avatar","Name","type","Btn","onClick","AuthNav","MainAppBar","AppBar","position","header","sx","backgroundColor","transition","flexDirection","fieldsRegister","placeholder","required","RegisterForm","useState","setName","setEmail","password","setPassword","nameInputIdRef","useRef","generate","emailInputIdRef","passwordInputIdRef","reset","Form","onSubmit","e","preventDefault","FormContainer","Label","htmlFor","current","Input","value","onChange","target","Email","Password","NameBtn","fields","LoginForm","ContactItem","number","Item","Text","ContactsList","filterList","useEffect","List","map","FormData","pattern","title","setNumber","numberInputIdRef","isAvailableName","find","contact","isAvailableNumber","alert","addToContact","Tel","Filter","Phonebook","Title","ContactsView","PrivateRoute","children","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","App","wrapperBox","wrapperProgress","CircularProgress","path","HomePage","Register","Login","ReactDOM","render","StrictMode","loading","document","getElementById","module","exports"],"mappings":"uSAEMA,EAAWC,IAAMC,OAAO,CAC5BC,QAAS,0CAGEC,EAAQ,CACnBC,IADmB,SACfD,GACFJ,EAASM,SAASC,QAAQC,OAAOC,cAAjC,iBAA2DL,IAE7DM,MAJmB,WAKjBV,EAASM,SAASC,QAAQC,OAAOC,cAAgB,KAwBxCE,EAAc,uCAAG,8BAAAC,EAAA,sEACLZ,EAASa,IAAI,aADR,uBACpBC,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,qDAKdC,EAAa,uCAAG,WAAOC,GAAP,iBAAAJ,EAAA,sEACJZ,EAASiB,KAAK,YAAaD,GADvB,uBACnBF,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKbI,EAAa,uCAAG,WAAOC,GAAP,iBAAAP,EAAA,sEACJZ,EAASoB,OAAT,mBAA4BD,IADxB,uBACnBL,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKX,GACbV,QACAO,iBACAI,gBACAG,iBCpDIG,EAA8BC,YAAa,iBAC3CC,EAA8BD,YAAa,wBAC3CE,EAA4BF,YAAa,sBAYhC,GACbG,sBAX4BH,YAAa,iBAYzCI,sBAX4BJ,YAAa,wBAYzCK,oBAX0BL,YAAa,sBAavCM,2BAXiCN,YAAa,oBAY9CO,2BAXiCP,YAAa,2BAY9CQ,yBAX+BR,YAAa,yBAa5CD,8BACAE,8BACAC,4BAEAO,gBAfsBT,YAAa,oBCXxBU,EAAe,WAC1B,IAAMC,EAAW,uCAAG,WAAOC,EAAUC,GAAjB,mBAAAvB,EAAA,+DAGduB,IADM/B,EAFQ,EAEhBgC,KAAQhC,MAEViC,EAAIjC,MAAMC,IAAID,GACd8B,EAASI,EAAQjB,+BALC,kBAQGgB,EAAI1B,iBARP,OAQVG,EARU,OAShBoB,EAASI,EAAQf,4BAA4BT,IAT7B,kDAWhBoB,EAASI,EAAQd,0BAAR,OAXO,0DAAH,wDAcjB,OAAOS,GAGIM,EAAiB,SAACvB,GAC7B,IAAMwB,EAAW,uCAAG,WAAON,GAAP,eAAAtB,EAAA,6DAClBsB,EAASI,EAAQb,yBADC,kBAIGY,EAAItB,cAAcC,GAJrB,OAIVF,EAJU,OAKhBoB,EAASI,EAAQZ,sBAAsBZ,IALvB,gDAOhBoB,EAASI,EAAQX,oBAAR,OAPO,yDAAH,sDAUjB,OAAOa,GAGIC,EAAsB,SAACtB,GAAD,8CAAQ,WAAOe,GAAP,eAAAtB,EAAA,6DACzCsB,EAASI,EAAQV,8BADwB,kBAIpBS,EAAInB,cAAcC,GAJE,OAIjCL,EAJiC,OAKvCoB,EAASI,EAAQT,2BAA2Bf,IALL,gDAOvCoB,EAASI,EAAQR,yBAAR,OAP8B,yDAAR,uD,sBC/B7BY,EAAeC,YAAc,IAAD,mBAC/BL,EAAQZ,uBAAwB,SAACkB,EAAD,GAAyB,IAAfC,EAAc,EAAdA,QACnC7B,EAAU,eAAQ6B,GACxBD,EAAME,KAAK9B,MAHmB,cAK/BsB,EAAQf,6BAA8B,SAACwB,EAAD,YAAMF,WALb,cAM/BP,EAAQT,4BAA6B,SAACe,EAAD,GAAyB,IAAfC,EAAc,EAAdA,QACxCG,EAAMJ,EAAMK,WAAU,qBAAG9B,KAAgB0B,KAC/CD,EAAMM,OAAOF,EAAK,MARY,IAY5BG,EAAgBR,YAAc,GAAD,eAChCL,EAAQP,iBAAkB,SAACgB,EAAD,YAAMF,YAG7BO,EAAQT,YAAc,IAAD,mBACxBL,EAAQd,2BAA4B,SAACuB,EAAD,YAAMF,WADlB,cAExBP,EAAQX,qBAAsB,SAACoB,EAAD,YAAMF,WAFZ,cAGxBP,EAAQR,0BAA2B,SAACiB,EAAD,YAAMF,WAHjB,cAIxBP,EAAQjB,6BAA8B,iBAAM,MAJpB,cAKxBiB,EAAQb,uBAAwB,iBAAM,MALd,cAMxBa,EAAQV,4BAA6B,iBAAM,MANnB,IASZyB,cAAgB,CAC7BC,MAAOZ,EACPU,QACAG,OAAQJ,I,QC9BGlB,EAAc,SAACW,GAAD,OAAWA,EAAMY,SAASF,OAExCG,EAAY,SAACb,GAAD,OAAWA,EAAMY,SAASD,QAUtCG,EAAgBC,YAC3B,CAAC1B,EAAawB,IACd,SAACD,EAAUD,GACT,IAAMK,EAAaL,EAAOM,cAI1B,OAHuBL,EAASD,QAAO,SAACO,GAAD,oBACrCA,QADqC,IACrCA,GADqC,UACrCA,EAAMC,YAD+B,aACrC,EAAYF,cAAcG,SAASJ,S,QCdzC3D,IAAMK,SAASH,QAAU,wCAEzB,I,EAAMC,EAAQ,SACRA,GACFH,IAAMK,SAASC,QAAQC,OAAOC,cAA9B,iBAAwDL,IAFtDA,EAAQ,WAKVH,IAAMK,SAASC,QAAQC,OAAOC,cAAgB,IAI5CwD,EAAWC,YAAiB,gBAAD,uCAAkB,WAAOC,GAAP,iBAAAvD,EAAA,+EAExBX,IAAMgB,KAAK,gBAAiBkD,GAFJ,uBAEvCrD,EAFuC,EAEvCA,KACRV,EAAUU,EAAKV,OAHgC,kBAIxCU,GAJwC,uCAM/CsD,SAAOC,QAAQ,yBANgC,kBAOxC,KAAMC,SAASC,QAPyB,yDAAlB,uDAW3BC,EAAQN,YAAiB,aAAD,uCAAe,WAAOC,GAAP,iBAAAvD,EAAA,+EAElBX,IAAMgB,KAAK,eAAgBkD,GAFT,uBAEjCrD,EAFiC,EAEjCA,KACRV,EAAUU,EAAKV,OAH0B,kBAIlCU,GAJkC,uCAMzCsD,SAAOC,QAAQ,2CAN0B,kBAOlC,KAAMC,SAASC,QAPmB,yDAAf,uDAWxBE,EAASP,YAAiB,cAAD,sBAAgB,sBAAAtD,EAAA,+EAErCX,IAAMgB,KAAK,iBAF0B,OAG3Cb,IAH2C,wEAKpC,KAAMkE,SAASC,QALqB,yDASzCG,EAAmBR,YACvB,eADuC,uCAEvC,WAAOnB,EAAG4B,GAAV,qBAAA/D,EAAA,yDACQgE,EAAQD,EAASxC,WAGA,QAFjB0C,EAAiBD,EAAMxC,KAAKhC,OAFpC,yCAKWuE,EAASG,mBALpB,cAQE1E,EAAUyE,GARZ,kBAU2B5E,IAAMY,IAAI,kBAVrC,uBAUYC,EAVZ,EAUYA,KAVZ,kBAWWA,GAXX,2DAaW,KAAMwD,SAASC,QAb1B,0DAFuC,yDA0B1BQ,EANI,CACjBd,WACAQ,SACAD,QACAE,oBCvDaM,EALO,CACpBC,cAPoB,SAACL,GAAD,OAAWA,EAAMxC,KAAK8C,YAQ1CC,YANkB,SAACP,GAAD,OAAWA,EAAMxC,KAAKgD,KAAKrB,MAO7CsB,qBAL2B,SAACT,GAAD,OAAWA,EAAMxC,KAAKkD,wBCwCpCC,EAvCGC,YAAY,CAC5BzB,KAAM,OACN0B,aATmB,CACnBL,KAAM,CAAErB,KAAM,KAAM2B,MAAO,MAC3BtF,MAAO,KACP8E,YAAY,EACZI,uBAAuB,GAMvBK,eAAa,mBACVC,EAAe3B,SAAS4B,WADd,SACyBjB,EAAOkB,GACzClB,EAAMQ,KAAOU,EAAOjD,QAAQuC,KAC5BR,EAAMxE,MAAQ0F,EAAOjD,QAAQzC,MACV,MAAnB0F,EAAOjD,QACF+B,EAAMM,YAAa,EACnBN,EAAMM,YAAa,KANf,cAQVU,EAAepB,MAAMqB,WARX,SAQsBjB,EAAOkB,GACtClB,EAAMQ,KAAOU,EAAOjD,QAAQuC,KAC5BR,EAAMxE,MAAQ0F,EAAOjD,QAAQzC,MACV,MAAnB0F,EAAOjD,QACF+B,EAAMM,YAAa,EACnBN,EAAMM,YAAa,KAbf,cAeVU,EAAenB,OAAOoB,WAfZ,SAeuBjB,EAAOkB,GACvClB,EAAMQ,KAAO,CAAErB,KAAM,KAAM2B,MAAO,MAClCd,EAAMxE,MAAQ,KACdwE,EAAMM,YAAa,KAlBV,cAoBVU,EAAelB,iBAAiBqB,SApBtB,SAoB+BnB,EAAOkB,GAC/ClB,EAAMU,uBAAwB,KArBrB,cAuBVM,EAAelB,iBAAiBmB,WAvBtB,SAuBiCjB,EAAOkB,GACjDlB,EAAMQ,KAAOU,EAAOjD,QACD,MAAnBiD,EAAOjD,QACF+B,EAAMM,YAAa,EACnBN,EAAMM,YAAa,EACxBN,EAAMU,uBAAwB,KA5BrB,cA8BVM,EAAelB,iBAAiBsB,UA9BtB,SA8BgCpB,GACzCA,EAAMU,uBAAwB,KA/BrB,KAoCf,QClCMW,GAAU,YACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAK1DC,GAAoB,CACxBC,IAAK,OACLC,YACAC,UAAW,CAAC,UAGDlE,GAAQmE,YAAe,CAClCC,QAAS,CACP5E,KAAM6E,YAAeN,GAAmBO,GACxC1D,SAAUwD,GAEZf,cACAkB,UAAUC,IAGCC,GAAYC,YAAa1E,I,+GC1BvB2E,GARE,kBACf,eAACC,GAAA,EAAD,CAAKC,UAAWC,KAAOC,a,8BC2BVC,GA3BI,WACjB,IAAM1C,EAAa2C,aAAY7C,EAAcC,eAC7C,OACE,iCACE,eAAC,KAAD,CACE6C,GAAG,IACHC,OAAK,EACLN,UAAWC,KAAOM,KAClBC,gBAAiBP,KAAOQ,WAJ1B,sBASChD,GACC,eAAC,KAAD,CACE4C,GAAG,YACHC,OAAK,EACLN,UAAWC,KAAOM,KAClBC,gBAAiBP,KAAOQ,WAJ1B,2B,oBCnBO,OAA0B,2CC4B1BC,GAtBE,WACf,IAAMjG,EAAWkG,eACXrE,EAAO8D,aAAY7C,EAAcG,aACjCkD,EAASC,GAEf,OACE,qCACE,uBAAKb,UAAWC,KAAOa,UAAvB,UACE,sBAAKC,IAAKH,EAAQI,IAAI,IAAIhB,UAAWC,KAAOgB,SAC5C,wBAAMjB,UAAWC,KAAOiB,KAAxB,0GAAiD5E,KACjD,yBACE6E,KAAK,SACLnB,UAAWC,KAAOmB,IAClBC,QAAS,kBAAM5G,EAAS0D,EAAenB,WAHzC,kD,oBCZO,SAASsE,KACtB,OACE,iCACE,eAAC,KAAD,CACEjB,GAAG,YACHC,OAAK,EACLN,UAAWC,KAAOM,KAClBC,gBAAiBP,KAAOQ,WAJ1B,0BAQA,eAAC,KAAD,CACEJ,GAAG,SACHC,OAAK,EACLN,UAAWC,KAAOM,KAClBC,gBAAiBP,KAAOQ,WAJ1B,sB,wBCPS,SAASc,KACtB,IAAM9D,EAAa2C,aAAY7C,EAAcC,eAC7C,OACE,gBAACgE,GAAA,EAAD,CACEC,SAAS,SACTzB,UAAWC,KAAOyB,OAClBC,GAAI,CACFC,gBAAiB,OACjBC,WAAY,mBACZC,cAAe,OANnB,UASE,eAAC,GAAD,IACCrE,EAAa,eAAC,GAAD,IAAe,eAAC6D,GAAD,O,aCrBtBS,GACL,CACJzF,KAAM,OACN6E,KAAM,OACNa,YAAa,sEACbC,UAAU,GALDF,GAOJ,CACLzF,KAAM,QACN6E,KAAM,QACNa,YAAa,yDACbC,UAAU,GAXDF,GAaD,CACRzF,KAAM,WACN6E,KAAM,WACNa,YAAa,wFACbC,UAAU,G,6BCgFCC,GAvFM,WACnB,MAAwBC,mBAAS,IAAjC,oBAAO7F,EAAP,KAAa8F,EAAb,KACA,EAA0BD,mBAAS,IAAnC,oBAAOlE,EAAP,KAAcoE,EAAd,KACA,EAAgCF,mBAAS,IAAzC,oBAAOG,EAAP,KAAiBC,EAAjB,KAEM9H,EAAWkG,eAEX6B,EAAiBC,iBAAOC,uBACxBC,EAAkBF,iBAAOC,uBACzBE,EAAqBH,iBAAOC,uBAuB5BG,EAAQ,WACZT,EAAQ,IACRC,EAAS,IACTE,EAAY,KAEd,OACE,uBAAMvC,UAAWC,KAAO6C,KAAMC,SAZX,SAACC,GACpBA,EAAEC,iBACFxI,EAAS0D,EAAe3B,SAAS,CAAEF,OAAM2B,QAAOqE,cAChDO,KASA,SACE,uBAAK7C,UAAWC,KAAOiD,cAAvB,UACE,sBAAKlD,UAAWC,KAAOiB,KAAvB,SACE,yBAAOlB,UAAWC,KAAOkD,MAAOC,QAASZ,EAAea,QAAxD,iBAEE,kDACMtB,IADN,IAEE/B,UAAWC,KAAOqD,MAClBrB,UAAQ,EACRsB,MAAOjH,EACPkH,SArCa,SAAC,GAAgB,IAChCD,EAD+B,EAAbE,OAClBF,MACRnB,EAAQmB,IAoCE7J,GAAI8I,EAAea,gBAIzB,sBAAKrD,UAAWC,KAAOyD,MAAvB,SACE,yBAAO1D,UAAWC,KAAOkD,MAAOC,QAAST,EAAgBU,QAAzD,kBAEE,kDACMtB,IADN,IAEE/B,UAAWC,KAAOqD,MAClBrB,UAAQ,EACRsB,MAAOtF,EACPuF,SA7Cc,SAAC,GAAgB,IACjCD,EADgC,EAAbE,OACnBF,MACRlB,EAASkB,IA4CC7J,GAAIiJ,EAAgBU,gBAI1B,sBAAKrD,UAAWC,KAAO0D,SAAvB,SACE,yBAAO3D,UAAWC,KAAOkD,MAAOC,QAASR,EAAmBS,QAA5D,qBAEE,kDACMtB,IADN,IAEE/B,UAAWC,KAAOqD,MAClBrB,UAAQ,EACRsB,MAAOjB,EACPkB,SArDiB,SAAC,GAAgB,IACpCD,EADmC,EAAbE,OACtBF,MACRhB,EAAYgB,IAoDF7J,GAAIkJ,EAAmBS,gBAI7B,yBAAQlC,KAAK,SAASnB,UAAWC,KAAO2D,QAAxC,2BCzFKC,GACJ,CACLvH,KAAM,QACN6E,KAAM,QACNa,YAAa,yDACbC,UAAU,GALD4B,GAOD,CACRvH,KAAM,WACN6E,KAAM,WACNa,YAAa,wFACbC,UAAU,G,oBCgEC6B,GAlEG,WAChB,MAA0B3B,mBAAS,IAAnC,oBAAOlE,EAAP,KAAcoE,EAAd,KACA,EAAgCF,mBAAS,IAAzC,oBAAOG,EAAP,KAAiBC,EAAjB,KAEM9H,EAAWkG,eAEXgC,EAAkBF,iBAAOC,uBACzBE,EAAqBH,iBAAOC,uBAkB5BG,EAAQ,WACZR,EAAS,IACTE,EAAY,KAEd,OACE,uBAAMvC,UAAWC,KAAO6C,KAAMC,SAXX,SAACC,GACpBA,EAAEC,iBACFxI,EAAS0D,EAAepB,MAAM,CAAEkB,QAAOqE,cACvCO,KAQA,SACE,uBAAK7C,UAAWC,KAAOiD,cAAvB,UACE,sBAAKlD,UAAWC,KAAOyD,MAAvB,SACE,yBAAO1D,UAAWC,KAAOkD,MAAOC,QAAST,EAAgBU,QAAzD,kBAEE,kDACMQ,IADN,IAEE7D,UAAWC,KAAOqD,MAClBrB,UAAQ,EACRsB,MAAOtF,EACPuF,SA/Bc,SAAC,GAAgB,IACjCD,EADgC,EAAbE,OACnBF,MACRlB,EAASkB,IA8BC7J,GAAIiJ,EAAgBU,gBAI1B,sBAAKrD,UAAWC,KAAO0D,SAAvB,SACE,yBAAO3D,UAAWC,KAAOkD,MAAOC,QAASR,EAAmBS,QAA5D,qBAEE,kDACMQ,IADN,IAEE7D,UAAWC,KAAOqD,MAClBrB,UAAQ,EACRsB,MAAOjB,EACPkB,SAvCiB,SAAC,GAAgB,IACpCD,EADmC,EAAbE,OACtBF,MACRhB,EAAYgB,IAsCF7J,GAAIkJ,EAAmBS,gBAI7B,yBAAQlC,KAAK,SAASnB,UAAWC,KAAO2D,QAAxC,0B,wCC7COG,GAjBK,SAAC,GAA0B,IAAxBzH,EAAuB,EAAvBA,KAAM0H,EAAiB,EAAjBA,OAAQtK,EAAS,EAATA,GAC7Be,EAAWkG,eAIjB,OACE,sBAAIX,UAAWC,KAAOgE,KAAtB,UACE,qBAAGjE,UAAWC,KAAOiE,KAArB,UACG5H,EADH,IACU0H,KAEV,yBAAQhE,UAAWC,KAAOmB,IAAKD,KAAK,SAASE,QARvB,WACxB5G,EAASO,EAAoBtB,KAO3B,wBCYSyK,GApBM,WACnB,IAAMC,EAAahE,aAAYnE,GAEzBxB,EAAWkG,eAMjB,OAJA0D,qBAAU,WACR5J,EAASF,OACR,CAACE,IAGF,qCACE,qBAAIuF,UAAWC,KAAOqE,KAAtB,SACGF,EAAWG,KAAI,gBAAGjI,EAAH,EAAGA,KAAM0H,EAAT,EAASA,OAAQtK,EAAjB,EAAiBA,GAAjB,OACd,eAAC,GAAD,CAAsB4C,KAAMA,EAAM0H,OAAQA,EAAQtK,GAAIA,GAApCA,W,oBCFb8K,GAlBE,CACflI,KAAM,CACJ6E,KAAM,OACN7E,KAAM,OACNmI,QAAS,yHACTC,MACE,mcAEJV,OAAQ,CACN7C,KAAM,MACN7E,KAAM,SACNmI,QACE,yFACFC,MACE,kiBC8ES5B,GAnFF,WACX,IAAM/G,EAAWqE,aAAY5F,GACvBC,EAAWkG,eACjB,EAAwBwB,mBAAS,IAAjC,oBAAO7F,EAAP,KAAa8F,EAAb,KACA,EAA4BD,mBAAS,IAArC,oBAAO6B,EAAP,KAAeW,EAAf,KAEMnC,EAAiBC,iBAAOC,uBACxBkC,EAAmBnC,iBAAOC,uBAkC1BG,EAAQ,WACZT,EAAQ,IACRuC,EAAU,KAGZ,OACE,uBAAM3E,UAAWC,KAAO6C,KAAMC,SAbX,SAACC,GACpBA,EAAEC,iBA1BiB,WACnB,IAAM4B,EAAkB9I,EAAS+I,MAAK,SAACC,GAAD,OAAaA,EAAQzI,OAASA,KAC9D0I,EAAoBjJ,EAAS+I,MACjC,SAACC,GAAD,OAAaA,EAAQf,SAAWA,KAElC,GAAIa,EACFI,MAAM,GAAD,OAAI3I,EAAJ,iCAGP,GAAI0I,EACFC,MAAM,GAAD,OAAIjB,EAAJ,gCADP,CAIA,IAAM3F,EAASvD,EAAe,CAAEwB,OAAM0H,WACtCvJ,EAAS4D,IAaT6G,GAEArC,KASA,SACE,uBAAK7C,UAAWC,KAAOiD,cAAvB,UACE,sBAAKlD,UAAWC,KAAOiB,KAAvB,SACE,yBAAOlB,UAAWC,KAAOkD,MAAOC,QAASZ,EAAea,QAAxD,iBAEE,kDACMmB,GAASlI,MADf,IAEE0D,UAAWC,KAAOqD,MAClBrB,UAAQ,EACRsB,MAAOjH,EACPkH,SA/BO,SAACR,GAClBZ,EAAQY,EAAES,OAAOF,QA+BP7J,GAAI8I,EAAea,gBAIzB,sBAAKrD,UAAWC,KAAOkF,IAAvB,SACE,yBAAOnF,UAAWC,KAAOkD,MAAOC,QAASwB,EAAiBvB,QAA1D,mBAEE,kDACMmB,GAASR,QADf,IAEEhE,UAAWC,KAAOqD,MAClBrB,UAAQ,EACRsB,MAAOS,EACPR,SAxCS,SAACR,GACpB2B,EAAU3B,EAAES,OAAOF,QAwCT7J,GAAIkL,EAAiBvB,gBAI3B,yBAAQlC,KAAK,SAASnB,UAAWC,KAAO2D,QAAxC,+B,oBCzDOwB,GArBA,WACb,IAAMtJ,EAASsE,aAAYpE,GAErBvB,EAAWkG,eAKjB,OACE,qCACE,wBACEX,UAAWC,KAAOqD,MAClBE,SAPW,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClBhJ,EAASI,EAAQP,gBAAgBmJ,EAAOF,SAOpCA,MAAOzH,EACPqF,KAAK,OACL7E,KAAK,cCJE+I,GAZG,WAChB,OACE,uBAAKrF,UAAWC,KAAOC,UAAvB,UACE,qBAAIF,UAAWC,KAAOqF,MAAtB,uBACA,eAAC,GAAD,IACA,qBAAItF,UAAWC,KAAOqF,MAAtB,sBACA,eAAC,GAAD,IACA,eAAC,GAAD,Q,oBCLS,SAASC,KACtB,IAAM9K,EAAWkG,eAIjB,OAFA0D,qBAAU,kBAAM5J,EAASF,OAAiB,CAACE,IAGzC,eAACsF,GAAA,EAAD,CAAKC,UAAWC,KAAOC,UAAvB,SACE,eAAC,GAAD,M,0CCTS,SAASsF,GAAT,GAIX,IAHFC,EAGC,EAHDA,SAGC,IAFDC,kBAEC,MAFY,SAEZ,EADEC,EACF,mBACKlI,EAAa2C,aAAY7C,EAAcC,eAC7C,OACE,eAAC,KAAD,2BAAWmI,GAAX,aACGlI,EAAagI,EAAW,eAAC,KAAD,CAAUpF,GAAIqF,O,8CCT9B,SAASE,GAAT,GAKX,IAJFH,EAIC,EAJDA,SAIC,IAHDI,kBAGC,aAFDH,kBAEC,MAFY,IAEZ,EADEC,EACF,mBAEKG,EADa1F,aAAY7C,EAAcC,gBACRqI,EACrC,OACE,eAAC,KAAD,2BAAWF,GAAX,aACGG,EAAiB,eAAC,KAAD,CAAUzF,GAAIqF,IAAiBD,KCGxC,SAASM,KACtB,IAAMtL,EAAWkG,eACX9C,EAAwBuC,aAAY7C,EAAcK,sBAKxD,OAHAyG,qBAAU,WACR5J,EAAS0D,EAAelB,sBACvB,CAACxC,IAEF,eAACsF,GAAA,EAAD,CAAKC,UAAWC,KAAO+F,WAAvB,SACGnI,EACC,eAACkC,GAAA,EAAD,CAAKC,UAAWC,KAAOgG,gBAAvB,SACE,eAACC,GAAA,EAAD,MAGF,uCACE,eAAC3E,GAAD,IACA,gBAAC,KAAD,WACE,eAACqE,GAAD,CAAatF,OAAK,EAAC6F,KAAK,IAAxB,SACE,eAACC,GAAD,MAEF,eAACR,GAAD,CAAaO,KAAK,YAAYN,YAAU,EAAxC,SACE,eAACQ,GAAD,MAEF,eAACT,GAAD,CAAaO,KAAK,SAASN,YAAU,EAArC,SACE,eAACS,GAAD,MAEF,eAACd,GAAD,CAAcW,KAAK,YAAnB,SACE,eAAC,GAAD,cCnCdI,IAASC,OACP,eAAC,IAAMC,WAAP,UACE,eAAC,KAAD,CAAUtL,MAAOA,GAAjB,SACE,eAAC,KAAD,CAAauL,QAAS,KAAM9G,UAAWA,GAAvC,SACE,eAAC,KAAD,UACE,eAAC,GAAD,YAKR+G,SAASC,eAAe,U,mBClB1BC,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,KAAO,uBAAuB,MAAQ,wBAAwB,QAAU,4B,mBCA1HD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,KAAO,oBAAoB,MAAQ,qBAAqB,QAAU,yB,mBCAjHD,EAAOC,QAAU,CAAC,MAAQ,oBAAoB,KAAO,mBAAmB,MAAQ,oBAAoB,QAAU,wB,mBCA9GD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,KAAO,2BAA2B,KAAO,2BAA2B,IAAM,4B,mBCA9HD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,WAAa,iC,mBCA/DD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,OAAS,yBAAyB,KAAO,uBAAuB,IAAM,wB,mBCAhID,EAAOC,QAAU,CAAC,KAAO,sBAAsB,WAAa,8B,mBCA5DD,EAAOC,QAAU,CAAC,UAAY,+B,wCCA9BD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,MAAQ,wBAAwB,KAAO,yB,mBCAjGD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,MAAQ,wB,mBCA1BD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,MAAQ,2B","file":"static/js/main.ff153998.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://connections-api.herokuapp.com\",\r\n});\r\n\r\nexport const token = {\r\n  set(token) {\r\n    instance.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    instance.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\n// export const userSignup = async (newUser) => {\r\n//   const { data } = await instance.post(\"/users/signup\", newUser);\r\n//   return data;\r\n// };\r\n\r\n// export const userLogin = async (newLogin) => {\r\n//   const { data } = await instance.post(\"/users/login\", newLogin);\r\n//   return data;\r\n// };\r\n\r\n// export const userLogout = async (newLogout) => {\r\n//   const { data } = await instance.post(\"/users/logout\", newLogout);\r\n//   return data;\r\n// };\r\n\r\n// export const getCurrentUser = async () => {\r\n//   const { data } = await instance.get(\"/users/current\");\r\n//   return data;\r\n// };\r\n\r\nexport const getAllContacts = async () => {\r\n  const { data } = await instance.get(\"/contacts\");\r\n  return data;\r\n};\r\n\r\nexport const addNewContact = async (newContact) => {\r\n  const { data } = await instance.post(\"/contacts\", newContact);\r\n  return data;\r\n};\r\n\r\nexport const removeContact = async (id) => {\r\n  const { data } = await instance.delete(`contacts/${id}`);\r\n  return data;\r\n};\r\n\r\nexport default {\r\n  token,\r\n  getAllContacts,\r\n  addNewContact,\r\n  removeContact,\r\n};\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst getPhonebookContactsRequest = createAction(\"phonebook/get\");\r\nconst getPhonebookContactsSuccess = createAction(\"phonebook/getSuccess\");\r\nconst getPhonebookContactsError = createAction(\"phonebook/geterror\");\r\n\r\nconst addToPhonebookRequest = createAction(\"phonebook/add\");\r\nconst addToPhonebookSuccess = createAction(\"phonebook/addSuccess\");\r\nconst addToPhonebookError = createAction(\"phonebook/addError\");\r\n\r\nconst removeFromPhonebookRequest = createAction(\"phonebook/remove\");\r\nconst removeFromPhonebookSuccess = createAction(\"phonebook/removeSuccess\");\r\nconst removeFromPhonebookError = createAction(\"phonebook/removeError\");\r\n\r\nconst filterPhonebook = createAction(\"phonebok/filter\");\r\n\r\nexport default {\r\n  addToPhonebookRequest,\r\n  addToPhonebookSuccess,\r\n  addToPhonebookError,\r\n\r\n  removeFromPhonebookRequest,\r\n  removeFromPhonebookSuccess,\r\n  removeFromPhonebookError,\r\n\r\n  getPhonebookContactsRequest,\r\n  getPhonebookContactsSuccess,\r\n  getPhonebookContactsError,\r\n\r\n  filterPhonebook,\r\n};\r\n","import api from \"../../api\";\r\nimport actions from \"./actions\";\r\n\r\nexport const getPhonebook = () => {\r\n  const getContacts = async (dispatch, getState) => {\r\n    const {\r\n      auth: { token },\r\n    } = getState();\r\n    api.token.set(token);\r\n    dispatch(actions.getPhonebookContactsRequest());\r\n\r\n    try {\r\n      const data = await api.getAllContacts();\r\n      dispatch(actions.getPhonebookContactsSuccess(data));\r\n    } catch (error) {\r\n      dispatch(actions.getPhonebookContactsError(error));\r\n    }\r\n  };\r\n  return getContacts;\r\n};\r\n\r\nexport const addToPhonebook = (newContact) => {\r\n  const addContacts = async (dispatch) => {\r\n    dispatch(actions.addToPhonebookRequest());\r\n\r\n    try {\r\n      const data = await api.addNewContact(newContact);\r\n      dispatch(actions.addToPhonebookSuccess(data));\r\n    } catch (error) {\r\n      dispatch(actions.addToPhonebookError(error));\r\n    }\r\n  };\r\n  return addContacts;\r\n};\r\n\r\nexport const removeFromPhonebook = (id) => async (dispatch) => {\r\n  dispatch(actions.removeFromPhonebookRequest());\r\n\r\n  try {\r\n    const data = await api.removeContact(id);\r\n    dispatch(actions.removeFromPhonebookSuccess(data));\r\n  } catch (error) {\r\n    dispatch(actions.removeFromPhonebookError(error));\r\n  }\r\n};\r\n\r\nexport default {\r\n  getPhonebook,\r\n  addToPhonebook,\r\n  removeFromPhonebook,\r\n};\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./actions\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [actions.addToPhonebookSuccess]: (store, { payload }) => {\r\n    const newContact = { ...payload };\r\n    store.push(newContact);\r\n  },\r\n  [actions.getPhonebookContactsSuccess]: (_, { payload }) => payload,\r\n  [actions.removeFromPhonebookSuccess]: (store, { payload }) => {\r\n    const idx = store.findIndex(({ id }) => id === payload);\r\n    store.splice(idx, 1);\r\n  },\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [actions.filterPhonebook]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(\"\", {\r\n  [actions.getPhonebookContactsError]: (_, { payload }) => payload,\r\n  [actions.addToPhonebookError]: (_, { payload }) => payload,\r\n  [actions.removeFromPhonebookError]: (_, { payload }) => payload,\r\n  [actions.getPhonebookContactsRequest]: () => \"\",\r\n  [actions.addToPhonebookRequest]: () => \"\",\r\n  [actions.removeFromPhonebookRequest]: () => \"\",\r\n});\r\n\r\nexport default combineReducers({\r\n  items: itemsReducer,\r\n  error,\r\n  filter: filterReducer,\r\n});\r\n\r\n// const initialState = {\r\n//   contacts: {\r\n//     items: [],\r\n//     filter: \"\",\r\n//   },\r\n// };\r\n\r\n// const itemsReducer = (\r\n//   store = initialState.contacts.items,\r\n//   { type, payload }\r\n// ) => {\r\n//   switch (type) {\r\n//     case types.ADD_TO_PHONEBOOK:\r\n//       const newContact = { ...payload, id: generate() };\r\n//       return [...store, newContact];\r\n\r\n//     case types.REMOVE_FROM_PHONEBOOK:\r\n//       const updateContacts = store.filter((item) => item.id !== payload);\r\n//       return updateContacts;\r\n\r\n//     default:\r\n//       return store;\r\n//   }\r\n// };\r\n\r\n// const filterReducer = (\r\n//   store = initialState.contacts.filter,\r\n//   { type, payload }\r\n// ) => {\r\n//   switch (type) {\r\n//     case types.FILTER_PHONEBOOK:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return store;\r\n//   }\r\n// };\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContacts = (store) => store.contacts.items;\r\n\r\nexport const getFilter = (store) => store.contacts.filter;\r\n\r\n// const getFilterList = () => {\r\n//   const filterItem = filter.toLowerCase();\r\n//   const filterContacts = contacts.filter((item) =>\r\n//     item?.name?.toLowerCase().includes(filterItem)\r\n//   );\r\n//   return filterContacts;\r\n// };\r\n\r\nexport const getFilterList = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const filterItem = filter.toLowerCase();\r\n    const filterContacts = contacts.filter((item) =>\r\n      item?.name?.toLowerCase().includes(filterItem)\r\n    );\r\n    return filterContacts;\r\n  }\r\n);\r\n","import { createAsyncThunk, isRejectedWithValue } from \"@reduxjs/toolkit\";\r\n// import api from \"../../api\";\r\nimport axios from \"axios\";\r\nimport { Notify } from \"notiflix/build/notiflix-notify-aio\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\nconst register = createAsyncThunk(\"auth/register\", async (credentials) => {\r\n  try {\r\n    const { data } = await axios.post(\"/users/signup\", credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    Notify.failure(\"User is already exist\");\r\n    return error.response.status;\r\n  }\r\n});\r\n\r\nconst logIn = createAsyncThunk(\"auth/login\", async (credentials) => {\r\n  try {\r\n    const { data } = await axios.post(\"/users/login\", credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    Notify.failure(\"You enter a wrong login or/and password\");\r\n    return error.response.status;\r\n  }\r\n});\r\n\r\nconst logOut = createAsyncThunk(\"auth/logout\", async () => {\r\n  try {\r\n    await axios.post(\"/users/logout\");\r\n    token.unset();\r\n  } catch (error) {\r\n    return error.response.status;\r\n  }\r\n});\r\n\r\nconst fetchCurrentUser = createAsyncThunk(\r\n  \"auth/refresh\",\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (persistedToken === null) {\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get(\"/users/current\");\r\n      return data;\r\n    } catch (error) {\r\n      return error.response.status;\r\n    }\r\n  }\r\n);\r\n\r\nconst operations = {\r\n  register,\r\n  logOut,\r\n  logIn,\r\n  fetchCurrentUser,\r\n};\r\nexport default operations;\r\n\r\n// export const register = createAsyncThunk(\"auth/login\", async (newUser) => {\r\n//   try {\r\n//     const data = await api.userSignup(newUser);\r\n//     api.token.set(data.token);\r\n//     return data;\r\n//   } catch (error) {\r\n//     Notify.failure(\"You enter a wrong login or/and password\");\r\n//     return error.response.status;\r\n//   }\r\n// });\r\n// // export const register = (newUser) => async (dispatch) => {\r\n// //   dispatch(authActions.getRegisterStart());\r\n// //   try {\r\n// //     const data = await api.userSignup(newUser);\r\n// //     token.set(data.token);\r\n// //     dispatch(authActions.getRegisterSuccess(data));\r\n// //   } catch (error) {\r\n// //     dispatch(authActions.getRegisterError(error));\r\n// //     Notify.failure(\"User is already exist\");\r\n// //     return error.response.status;\r\n// //   }\r\n// // };\r\n\r\n// // export const login = (newLogin) => async (dispatch) => {\r\n// //   dispatch(authActions.getLoginStart());\r\n// //   try {\r\n// //     const data = await api.userLogin(newLogin);\r\n// //     token.set(data.token);\r\n// //     dispatch(authActions.getLoginSuccess(data));\r\n// //   } catch (error) {\r\n// //     dispatch(authActions.getLoginError(error));\r\n// //     Notify.failure(\"You enter a wrong login or/and password\");\r\n// //     return error.response.status;\r\n// //   }\r\n// // };\r\n\r\n// export const logIn = createAsyncThunk(\"auth/login\", async (newLogin) => {\r\n//   try {\r\n//     const data = await api.userLogin(newLogin);\r\n//     api.token.set(data.token);\r\n//     return data;\r\n//   } catch (error) {\r\n//     Notify.failure(\"You enter a wrong login or/and password\");\r\n//     return error.response.status;\r\n//   }\r\n// });\r\n\r\n// // export const logout = (newLogout) => async (dispatch) => {\r\n// //   dispatch(authActions.getLogoutStart());\r\n// //   try {\r\n// //     const data = await api.userLogout(newLogout);\r\n// //     token.unset();\r\n// //     dispatch(authActions.getLogoutSuccess(data));\r\n// //   } catch (error) {\r\n// //     dispatch(authActions.getLogoutError(error));\r\n// //     return error.response.status;\r\n// //   }\r\n// // };\r\n\r\n// export const logOut = createAsyncThunk(\"auth/logout\", async (newLogout) => {\r\n//   try {\r\n//     await api.userLogout(newLogout);\r\n//     api.token.unset();\r\n//   } catch (error) {\r\n//     return error.response.status;\r\n//   }\r\n// });\r\n\r\n// // export const getUser = () => async (dispatch, getState) => {\r\n// //   const state = getState();\r\n// //   const hasToken = state.auth.token;\r\n\r\n// //   if (hasToken === null) {\r\n// //     return;\r\n// //   }\r\n\r\n// //   token.set(hasToken);\r\n\r\n// //   dispatch(authActions.getCurrentUserStart());\r\n\r\n// //   try {\r\n// //     const data = await api.getCurrentUser();\r\n// //     dispatch(authActions.getCurrentUserSuccess(data));\r\n// //   } catch (error) {\r\n// //     dispatch(authActions.getCurrentUserError(error));\r\n// //     return error.response.status;\r\n// //   }\r\n// // };\r\n\r\n// export const fetchCurrentUser = createAsyncThunk(\r\n//   \"auth/getUser\",\r\n//   async (_, thunkAPI) => {\r\n//     const state = thunkAPI.getState();\r\n//     const hasToken = state.auth.token;\r\n\r\n//     if (hasToken === null) {\r\n//       return thunkAPI.rejectWithValue();\r\n//     }\r\n\r\n//     api.token.set(hasToken);\r\n//     try {\r\n//       const data = api.getCurrentUser;\r\n//       return data;\r\n//     } catch (error) {\r\n//       return error.response.status;\r\n//     }\r\n//   }\r\n// );\r\n\r\n// const operations = {\r\n//   register,\r\n//   logIn,\r\n//   logOut,\r\n//   fetchCurrentUser,\r\n// };\r\n\r\n// export default operations;\r\n\r\n// // export const addToPhonebook = (newContact) => {\r\n// //     const addContacts = async (dispatch) => {\r\n// //       dispatch(actions.addToPhonebookRequest());\r\n\r\n// //       try {\r\n// //         const data = await api.addNewContact(newContact);\r\n// //         dispatch(actions.addToPhonebookSuccess(data));\r\n// //       } catch (error) {\r\n// //         dispatch(actions.addToPhonebookError(error));\r\n// //       }\r\n// //     };\r\n// //     return addContacts;\r\n// //   };\r\n","// export const authUserToken = (state) => state.auth.token;\r\n// export const authIsLoggedIn = (state) => state.auth.isLoggedIn;\r\n// export const authUserName = (state) => state.auth.user.name;\r\n// export const getCurrentUser = (state) => state.auth.currentUser;\r\n\r\nconst getIsLoggedIn = (state) => state.auth.isLoggedIn;\r\n\r\nconst getUsername = (state) => state.auth.user.name;\r\n\r\nconst getIsFetchingCurrent = (state) => state.auth.isFetchingCurrentUser;\r\n\r\nconst authSelectors = {\r\n  getIsLoggedIn,\r\n  getUsername,\r\n  getIsFetchingCurrent,\r\n};\r\nexport default authSelectors;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport authOperations from \"./auth-operations\";\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n  isFetchingCurrentUser: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  extraReducers: {\r\n    [authOperations.register.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      action.payload === 400\r\n        ? (state.isLoggedIn = false)\r\n        : (state.isLoggedIn = true);\r\n    },\r\n    [authOperations.logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      action.payload === 400\r\n        ? (state.isLoggedIn = false)\r\n        : (state.isLoggedIn = true);\r\n    },\r\n    [authOperations.logOut.fulfilled](state, action) {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n    [authOperations.fetchCurrentUser.pending](state, action) {\r\n      state.isFetchingCurrentUser = true;\r\n    },\r\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      action.payload === 401\r\n        ? (state.isLoggedIn = false)\r\n        : (state.isLoggedIn = true);\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n    [authOperations.fetchCurrentUser.rejected](state) {\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n\r\n// import { createSlice } from \"@reduxjs/toolkit\";\r\n// import authOperations from \"./auth-operations\";\r\n\r\n// const initialState = {\r\n//   user: {\r\n//     name: null,\r\n//     email: null,\r\n//   },\r\n//   token: null,\r\n//   isLoggedIn: false,\r\n//   error: null,\r\n//   currentUser: false,\r\n// };\r\n\r\n// const authSlice = createSlice({\r\n//   name: \"auth\",\r\n//   initialState,\r\n//   extraReducers: {\r\n//     [authOperations.register.fulfilled](state, action) {\r\n//       state.user = action.payload.user;\r\n//       state.token = action.payload.token;\r\n//       state.isLoggedIn = true;\r\n//     },\r\n//     [authOperations.register.rejected](state, action) {\r\n//       state.error = action.payload.error;\r\n//     },\r\n//     [authOperations.login.fulfilled](state, action) {\r\n//       state.user = action.payload.user;\r\n//       state.token = action.payload.token;\r\n//       state.isLoggedIn = true;\r\n//     },\r\n//     [authOperations.logout.fulfilled](state, action) {\r\n//       state.user = { name: null, email: null };\r\n//       state.token = null;\r\n//       state.isLoggedIn = false;\r\n//     },\r\n//     [authOperations.getUser.fulfilled](state, action) {\r\n//       state.user = action.payload;\r\n//       action.payload === 401\r\n//         ? (state.isLoggedIn = false)\r\n//         : (state.isLoggedIn = true);\r\n//       state.currentUser = false;\r\n//     },\r\n//     [authOperations.getUser.rejected](state) {\r\n//       state.currentUser = false;\r\n//     },\r\n//   },\r\n// });\r\n\r\n// export default authSlice.reducer;\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { reducer } from \"./contacts\";\r\nimport { authReducer } from \"./auth\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: reducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n// import { configureStore } from \"@reduxjs/toolkit\";\r\n// import {\r\n//   persistStore,\r\n//   persistReducer,\r\n//   FLUSH,\r\n//   REHYDRATE,\r\n//   PAUSE,\r\n//   PERSIST,\r\n//   PURGE,\r\n//   REGISTER,\r\n// } from \"redux-persist\";\r\n// import storage from \"redux-persist/lib/storage\";\r\n// import contactsReducer from \"./contacts/reducer\";\r\n// import authReducer from \"./auth/auth-reducer\";\r\n// const authPersistConfig = {\r\n//   key: \"auth\",\r\n//   storage,\r\n//   whitelist: [\"token\"],\r\n// };\r\n// export const store = configureStore({\r\n//   reducer: {\r\n//     contacts: contactsReducer,\r\n//     auth: persistReducer(authPersistConfig, authReducer),\r\n//   },\r\n//   middleware: (getDefaultMiddleware) =>\r\n//     getDefaultMiddleware({\r\n//       serializableCheck: {\r\n//         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n//       },\r\n//     }),\r\n// });\r\n// export const persistor = persistStore(store);\r\n","import styles from \"./HomePage.module.css\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nconst HomeView = () => (\r\n  <Box className={styles.container}>\r\n    {/* <Typography variant=\"h2\" component=\"div\" className={styles.title}>\r\n      Phonebook\r\n    </Typography> */}\r\n  </Box>\r\n);\r\n\r\nexport default HomeView;\r\n","import { NavLink } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { authSelectors } from \"../../redux/auth\";\r\nimport styles from \"./Navigation.module.css\";\r\n\r\nconst Navigation = () => {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <nav>\r\n      <NavLink\r\n        to=\"/\"\r\n        exact\r\n        className={styles.link}\r\n        activeClassName={styles.activeLink}\r\n      >\r\n        Homepage\r\n      </NavLink>\r\n\r\n      {isLoggedIn && (\r\n        <NavLink\r\n          to=\"/contacts\"\r\n          exact\r\n          className={styles.link}\r\n          activeClassName={styles.activeLink}\r\n        >\r\n          Phonebook\r\n        </NavLink>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","export default __webpack_public_path__ + \"static/media/default-avatar.859f63c2.png\";","import { useDispatch, useSelector } from \"react-redux\";\r\nimport styles from \"./UserMenu.module.css\";\r\nimport defaultAvatar from \"./default-avatar.png\";\r\n\r\nimport { authSelectors, authOperations } from \"../../redux/auth\";\r\n\r\nconst UserMenu = () => {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelectors.getUsername);\r\n  const avatar = defaultAvatar;\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.Container}>\r\n        <img src={avatar} alt=\"#\" className={styles.Avatar} />\r\n        <span className={styles.Name}>Добро пожаловать, {name}</span>\r\n        <button\r\n          type=\"button\"\r\n          className={styles.Btn}\r\n          onClick={() => dispatch(authOperations.logOut())}\r\n        >\r\n          Выйти\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserMenu;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./AuthNav.module.css\";\r\n\r\nexport default function AuthNav() {\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        to=\"/register\"\r\n        exact\r\n        className={styles.link}\r\n        activeClassName={styles.activeLink}\r\n      >\r\n        Registration\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/login\"\r\n        exact\r\n        className={styles.link}\r\n        activeClassName={styles.activeLink}\r\n      >\r\n        Login\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Navigation from \"../Navigation/Navigation\";\r\nimport UserMenu from \"../UserMenu/UserMenu\";\r\nimport AuthNav from \"../AuthNav/AuthNav\";\r\nimport { authSelectors } from \"../../redux/auth\";\r\nimport styles from \"./AppBar.module.css\";\r\n\r\nexport default function MainAppBar() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <AppBar\r\n      position=\"static\"\r\n      className={styles.header}\r\n      sx={{\r\n        backgroundColor: \"blue\",\r\n        transition: \"all 0.4s ease 0s\",\r\n        flexDirection: \"row\",\r\n      }}\r\n    >\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </AppBar>\r\n  );\r\n}\r\n","export const fieldsRegister = {\r\n  name: {\r\n    name: \"name\",\r\n    type: \"name\",\r\n    placeholder: \"Ввведите имя\",\r\n    required: true,\r\n  },\r\n  email: {\r\n    name: \"email\",\r\n    type: \"email\",\r\n    placeholder: \"Ввведите email\",\r\n    required: true,\r\n  },\r\n  password: {\r\n    name: \"password\",\r\n    type: \"password\",\r\n    placeholder: \"Ввведите пароль\",\r\n    required: true,\r\n  },\r\n};\r\n","import { useState } from \"react\";\r\nimport { fieldsRegister } from \"./fields-register\";\r\nimport { generate } from \"shortid\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { authOperations } from \"../../redux/auth\";\r\n\r\nimport styles from \"./Register.module.css\";\r\nimport { useRef } from \"react\";\r\n\r\nconst RegisterForm = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const nameInputIdRef = useRef(generate());\r\n  const emailInputIdRef = useRef(generate());\r\n  const passwordInputIdRef = useRef(generate());\r\n\r\n  const handleChangeName = ({ target }) => {\r\n    const { value } = target;\r\n    setName(value);\r\n  };\r\n\r\n  const handleChangeEmail = ({ target }) => {\r\n    const { value } = target;\r\n    setEmail(value);\r\n  };\r\n\r\n  const handleChangePassword = ({ target }) => {\r\n    const { value } = target;\r\n    setPassword(value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(authOperations.register({ name, email, password }));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n  return (\r\n    <form className={styles.Form} onSubmit={handleSubmit}>\r\n      <div className={styles.FormContainer}>\r\n        <div className={styles.Name}>\r\n          <label className={styles.Label} htmlFor={nameInputIdRef.current}>\r\n            Name\r\n            <input\r\n              {...fieldsRegister.name}\r\n              className={styles.Input}\r\n              required\r\n              value={name}\r\n              onChange={handleChangeName}\r\n              id={nameInputIdRef.current}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className={styles.Email}>\r\n          <label className={styles.Label} htmlFor={emailInputIdRef.current}>\r\n            Email\r\n            <input\r\n              {...fieldsRegister.email}\r\n              className={styles.Input}\r\n              required\r\n              value={email}\r\n              onChange={handleChangeEmail}\r\n              id={emailInputIdRef.current}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className={styles.Password}>\r\n          <label className={styles.Label} htmlFor={passwordInputIdRef.current}>\r\n            Password\r\n            <input\r\n              {...fieldsRegister.password}\r\n              className={styles.Input}\r\n              required\r\n              value={password}\r\n              onChange={handleChangePassword}\r\n              id={passwordInputIdRef.current}\r\n            />\r\n          </label>\r\n        </div>\r\n        <button type=\"submit\" className={styles.NameBtn}>\r\n          Sign up\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","export const fields = {\r\n  email: {\r\n    name: \"email\",\r\n    type: \"email\",\r\n    placeholder: \"Ввведите email\",\r\n    required: true,\r\n  },\r\n  password: {\r\n    name: \"password\",\r\n    type: \"password\",\r\n    placeholder: \"Ввведите пароль\",\r\n    required: true,\r\n  },\r\n};\r\n","import { useState } from \"react\";\r\nimport { fields } from \"./fields\";\r\nimport { generate } from \"shortid\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { authOperations } from \"../../redux/auth\";\r\nimport styles from \"./Login.module.css\";\r\nimport { useRef } from \"react\";\r\n\r\nconst LoginForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const emailInputIdRef = useRef(generate());\r\n  const passwordInputIdRef = useRef(generate());\r\n\r\n  const handleChangeEmail = ({ target }) => {\r\n    const { value } = target;\r\n    setEmail(value);\r\n  };\r\n\r\n  const handleChangePassword = ({ target }) => {\r\n    const { value } = target;\r\n    setPassword(value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(authOperations.logIn({ email, password }));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n  return (\r\n    <form className={styles.Form} onSubmit={handleSubmit}>\r\n      <div className={styles.FormContainer}>\r\n        <div className={styles.Email}>\r\n          <label className={styles.Label} htmlFor={emailInputIdRef.current}>\r\n            Email\r\n            <input\r\n              {...fields.email}\r\n              className={styles.Input}\r\n              required\r\n              value={email}\r\n              onChange={handleChangeEmail}\r\n              id={emailInputIdRef.current}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className={styles.Password}>\r\n          <label className={styles.Label} htmlFor={passwordInputIdRef.current}>\r\n            Password\r\n            <input\r\n              {...fields.password}\r\n              className={styles.Input}\r\n              required\r\n              value={password}\r\n              onChange={handleChangePassword}\r\n              id={passwordInputIdRef.current}\r\n            />\r\n          </label>\r\n        </div>\r\n        <button type=\"submit\" className={styles.NameBtn}>\r\n          Log in\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { removeFromPhonebook } from \"../../redux/contacts/operations\";\r\nimport styles from \"./ContactsList.module.css\";\r\n\r\nconst ContactItem = ({ name, number, id }) => {\r\n  const dispatch = useDispatch();\r\n  const removeFromContact = () => {\r\n    dispatch(removeFromPhonebook(id));\r\n  };\r\n  return (\r\n    <li className={styles.Item}>\r\n      <p className={styles.Text}>\r\n        {name} {number}\r\n      </p>\r\n      <button className={styles.Btn} type=\"button\" onClick={removeFromContact}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactItem;\r\n","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getPhonebook } from \"../../redux/contacts/operations\";\r\nimport { getFilterList } from \"../../redux/contacts/selectors\";\r\nimport ContactItem from \"./ContactItem\";\r\nimport styles from \"./ContactsList.module.css\";\r\n\r\nconst ContactsList = () => {\r\n  const filterList = useSelector(getFilterList);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getPhonebook());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <ul className={styles.List}>\r\n        {filterList.map(({ name, number, id }) => (\r\n          <ContactItem key={id} name={name} number={number} id={id} />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","const FormData = {\r\n  name: {\r\n    type: \"text\",\r\n    name: \"name\",\r\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\r\n    title:\r\n      \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\r\n  },\r\n  number: {\r\n    type: \"tel\",\r\n    name: \"number\",\r\n    pattern:\r\n      \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\r\n    title:\r\n      \"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\",\r\n  },\r\n};\r\n\r\nexport default FormData;\r\n","import React, { useRef } from \"react\";\r\nimport { generate } from \"shortid\";\r\nimport { useState } from \"react\";\r\nimport styles from \"./Form.module.css\";\r\nimport FormData from \"../Phonebook/formData\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addToPhonebook } from \"../../redux/contacts/operations\";\r\nimport { getContacts } from \"../../redux/contacts/selectors\";\r\n\r\nconst Form = () => {\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const nameInputIdRef = useRef(generate());\r\n  const numberInputIdRef = useRef(generate());\r\n\r\n  const addToContact = () => {\r\n    const isAvailableName = contacts.find((contact) => contact.name === name);\r\n    const isAvailableNumber = contacts.find(\r\n      (contact) => contact.number === number\r\n    );\r\n    if (isAvailableName) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n    if (isAvailableNumber) {\r\n      alert(`${number} is already in contacts`);\r\n      return;\r\n    }\r\n    const action = addToPhonebook({ name, number });\r\n    dispatch(action);\r\n  };\r\n\r\n  const changeName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const changeNumber = (e) => {\r\n    setNumber(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addToContact();\r\n    // onSubmit({ name, number });\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={styles.Form} onSubmit={handleSubmit}>\r\n      <div className={styles.FormContainer}>\r\n        <div className={styles.Name}>\r\n          <label className={styles.Label} htmlFor={nameInputIdRef.current}>\r\n            Name\r\n            <input\r\n              {...FormData.name}\r\n              className={styles.Input}\r\n              required\r\n              value={name}\r\n              onChange={changeName}\r\n              id={nameInputIdRef.current}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className={styles.Tel}>\r\n          <label className={styles.Label} htmlFor={numberInputIdRef.current}>\r\n            Number\r\n            <input\r\n              {...FormData.number}\r\n              className={styles.Input}\r\n              required\r\n              value={number}\r\n              onChange={changeNumber}\r\n              id={numberInputIdRef.current}\r\n            />\r\n          </label>\r\n        </div>\r\n        <button type=\"submit\" className={styles.NameBtn}>\r\n          Add contact\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n// class Form extends Component {\r\n//   state = {\r\n//     name: \"\",\r\n//     number: \"\",\r\n//   };\r\n\r\n//   nameInputId = generate();\r\n//   numberInputId = generate();\r\n\r\n//   handleChange = (e) => {\r\n//     const { name, value } = e.currentTarget;\r\n//     this.setState({\r\n//       [name]: value,\r\n//     });\r\n//   };\r\n\r\n//   handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     this.props.onSubmit(this.state);\r\n//     this.reset();\r\n//   };\r\n\r\n//   reset = () => {\r\n//     this.setState({\r\n//       name: \"\",\r\n//       number: \"\",\r\n//     });\r\n//   };\r\n\r\n//   render() {\r\n//     const { name, number } = this.state;\r\n//     const { handleSubmit, handleChange } = this;\r\n//     return (\r\n//       <form className={styles.Form} onSubmit={handleSubmit}>\r\n//         <div className={styles.FormContainer}>\r\n//           <div className={styles.Name}>\r\n//             <label className={styles.Label} htmlFor={this.nameInputId}>\r\n//               Name\r\n//               <input\r\n//                 {...FormData.name}\r\n//                 className={styles.Input}\r\n//                 required\r\n//                 value={name}\r\n//                 onChange={handleChange}\r\n//                 id={this.nameInputId}\r\n//               />\r\n//             </label>\r\n//           </div>\r\n//           <div className={styles.Tel}>\r\n//             <label className={styles.Label} htmlFor={this.numberInputId}>\r\n//               Number\r\n//               <input\r\n//                 {...FormData.number}\r\n//                 className={styles.Input}\r\n//                 required\r\n//                 value={number}\r\n//                 onChange={handleChange}\r\n//                 id={this.numberInputId}\r\n//               />\r\n//             </label>\r\n//           </div>\r\n//           <button type=\"submit\" className={styles.NameBtn}>\r\n//             Add contact\r\n//           </button>\r\n//         </div>\r\n//       </form>\r\n//     );\r\n//   }\r\n// }\r\n","import React from \"react\";\r\nimport styles from \"./Filter.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport actions from \"../../redux/contacts/actions\";\r\nimport { getFilter } from \"../../redux/contacts/selectors\";\r\n\r\nconst Filter = () => {\r\n  const filter = useSelector(getFilter);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = ({ target }) => {\r\n    dispatch(actions.filterPhonebook(target.value));\r\n  };\r\n  return (\r\n    <>\r\n      <input\r\n        className={styles.Input}\r\n        onChange={onChange}\r\n        value={filter}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import styles from \"./Phonebook.module.css\";\r\nimport ContactsList from \"../ContactsList/ContactsList\";\r\nimport FormMain from \"../Form/Form\";\r\nimport Filter from \"../Filter/Filter\";\r\n\r\nconst Phonebook = () => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <h2 className={styles.Title}>Phonebook</h2>\r\n      <FormMain />\r\n      <h2 className={styles.Title}>Contacts</h2>\r\n      <Filter />\r\n      <ContactsList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Phonebook;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Phonebook from \"../../components/Phonebook/Phonebook\";\r\nimport { getPhonebook } from \"../../redux/contacts\";\r\nimport Box from \"@mui/material/Box\";\r\nimport styles from \"./Contacts.module.css\";\r\n\r\nexport default function ContactsView() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => dispatch(getPhonebook()), [dispatch]);\r\n\r\n  return (\r\n    <Box className={styles.container}>\r\n      <Phonebook />\r\n    </Box>\r\n  );\r\n}\r\n","import { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { authSelectors } from \"../redux/auth\";\r\n\r\nexport default function PrivateRoute({\r\n  children,\r\n  redirectTo = \"/login\",\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { authSelectors } from \"../redux/auth\";\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  restricted = false,\r\n  redirectTo = \"/\",\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  );\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styles from \"./App.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport Box from \"@mui/material/Box\";\r\nimport HomePage from \"./pages/HomePage/HomePage\";\r\nimport MainAppBar from \"./components/AppBar/AppBar\";\r\nimport Register from \"./pages/Register/Register\";\r\nimport Login from \"./pages/Login/Login\";\r\nimport { authOperations } from \"./redux/auth\";\r\nimport Contacts from \"./pages/Contacts/Contacts\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\nimport PublicRoute from \"./components/PublicRoute\";\r\nimport { authSelectors } from \"./redux/auth\";\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n  const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrent);\r\n\r\n  useEffect(() => {\r\n    dispatch(authOperations.fetchCurrentUser());\r\n  }, [dispatch]);\r\n  return (\r\n    <Box className={styles.wrapperBox}>\r\n      {isFetchingCurrentUser ? (\r\n        <Box className={styles.wrapperProgress}>\r\n          <CircularProgress />\r\n        </Box>\r\n      ) : (\r\n        <>\r\n          <MainAppBar />\r\n          <Switch>\r\n            <PublicRoute exact path=\"/\">\r\n              <HomePage />\r\n            </PublicRoute>\r\n            <PublicRoute path=\"/register\" restricted>\r\n              <Register />\r\n            </PublicRoute>\r\n            <PublicRoute path=\"/login\" restricted>\r\n              <Login />\r\n            </PublicRoute>\r\n            <PrivateRoute path=\"/contacts\">\r\n              <Contacts />\r\n            </PrivateRoute>\r\n          </Switch>\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nApp.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { store, persistor } from \"./redux/store\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Register_Label__2iFmG\",\"Form\":\"Register_Form__2iVCo\",\"Input\":\"Register_Input__2-oJc\",\"NameBtn\":\"Register_NameBtn__30-wr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Login_Label__ZRIUW\",\"Form\":\"Login_Form__riwXk\",\"Input\":\"Login_Input__o5pEj\",\"NameBtn\":\"Login_NameBtn__2SBbg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Form_Label__3QBfK\",\"Form\":\"Form_Form__2boAo\",\"Input\":\"Form_Input__1kIqz\",\"NameBtn\":\"Form_NameBtn__1jr4a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item\":\"ContactsList_Item__3c0bw\",\"List\":\"ContactsList_List__1UAk9\",\"Text\":\"ContactsList_Text__2cDL5\",\"Btn\":\"ContactsList_Btn__GB_5Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__12o2K\",\"activeLink\":\"Navigation_activeLink__2rUFB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"UserMenu_Container__2f4HK\",\"Avatar\":\"UserMenu_Avatar__38zOu\",\"Name\":\"UserMenu_Name__1deHt\",\"Btn\":\"UserMenu_Btn__34GIl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__2ejsg\",\"activeLink\":\"AuthNav_activeLink__3huQJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Phonebook_container__Yb216\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"HomePage_container__13Sqf\",\"title\":\"HomePage_title__29u9D\",\"text\":\"HomePage_text__3aijf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__1Yk8v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Filter_Input__20k7U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Contacts_container__iNzwI\",\"title\":\"Contacts_title__z1e0R\"};"],"sourceRoot":""}