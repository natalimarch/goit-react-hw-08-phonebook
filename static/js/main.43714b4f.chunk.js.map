{"version":3,"sources":["components/Spinner/Spinner.jsx","Routes.jsx","redux/contacts/reducer.js","redux/auth/auth-reducer.js","redux/store.js","components/Navigation/Navigation.jsx","redux/auth/auth-selectors.js","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.jsx","components/AuthNav/AuthNav.jsx","components/Header/Header.jsx","App.js","index.js","redux/contacts/actions.js","api.js","components/UserMenu/UserMenu.module.css","redux/auth/auth-actions.js","redux/auth/auth-operations.js","redux/auth/auth-types.js"],"names":["Spinner","type","color","height","width","timeout","HomePage","lazy","Register","Login","Contacts","Routes","fallback","exact","path","itemsReducer","createReducer","actions","addToPhonebookSuccess","store","payload","newContact","push","getPhonebookContactsSuccess","_","removeFromPhonebookSuccess","idx","findIndex","id","splice","filterReducer","filterPhonebook","error","getPhonebookContactsError","addToPhonebookError","removeFromPhonebookError","getPhonebookContactsRequest","addToPhonebookRequest","removeFromPhonebookRequest","combineReducers","items","filter","initialState","user","name","email","token","state","authTypes","currentUserSuccess","registerSuccess","loginSuccess","logOutSuccess","authPersistConfig","key","storage","whitelist","configureStore","reducer","contacts","contactsReducer","auth","persistReducer","authReducer","persistor","persistStore","Navigation","to","className","styles","NavLink","authUserToken","authUserName","UserMenu","dispatch","useDispatch","useSelector","avatar","defaultAvatar","Container","src","alt","Avatar","Name","onClick","authOperations","logout","AuthNav","Header","isLoggedIn","App","loading","ReactDOM","render","StrictMode","document","getElementById","createAction","instance","axios","create","baseURL","set","defaults","headers","common","Authorization","unset","userSignup","newUser","a","post","data","userLogin","newLogin","userLogout","newLogout","getCurrentUser","get","getAllContacts","addNewContact","removeContact","delete","module","exports","loginStart","loginError","logOutStart","logOutError","registerStart","registerError","register","authActions","api","Notify","failure","response","status","login","operations","currentUserStart","currentUserError"],"mappings":"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","file":"static/js/main.43714b4f.chunk.js","sourcesContent":["import Loader from \"react-loader-spinner\";\n\nconst Spinner = () => {\n  return (\n    <Loader\n      type=\"Puff\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      timeout={5000}\n    />\n  );\n};\n\nexport default Spinner;\n","import { Switch, Route } from \"react-router-dom\";\nimport { Suspense, lazy } from \"react\";\nimport Spinner from \"./components/Spinner/Spinner\";\n\nconst HomePage = lazy(() => import(\"./pages/HomePage/HomePage\"));\nconst Register = lazy(() => import(\"./pages/Register/Register\"));\nconst Login = lazy(() => import(\"./pages/Login/Login\"));\nconst Contacts = lazy(() => import(\"./pages/Contacts/Contacts\"));\n\nconst Routes = () => {\n  return (\n    <Suspense fallback={<Spinner />}>\n      <Switch>\n        <Route exact path=\"/\">\n          <HomePage />\n        </Route>\n        <Route exact path=\"/register\">\n          <Register />\n        </Route>\n        <Route exact path=\"/login\">\n          <Login />\n        </Route>\n        <Route exact path=\"/contacts\">\n          <Contacts />\n        </Route>\n      </Switch>\n    </Suspense>\n  );\n};\n\nexport default Routes;\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport actions from \"./actions\";\nimport { combineReducers } from \"redux\";\n\nconst itemsReducer = createReducer([], {\n  [actions.addToPhonebookSuccess]: (store, { payload }) => {\n    const newContact = { ...payload };\n    store.push(newContact);\n  },\n  [actions.getPhonebookContactsSuccess]: (_, { payload }) => payload,\n  [actions.removeFromPhonebookSuccess]: (store, { payload }) => {\n    const idx = store.findIndex(({ id }) => id === payload);\n    store.splice(idx, 1);\n  },\n});\n\nconst filterReducer = createReducer(\"\", {\n  [actions.filterPhonebook]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(\"\", {\n  [actions.getPhonebookContactsError]: (_, { payload }) => payload,\n  [actions.addToPhonebookError]: (_, { payload }) => payload,\n  [actions.removeFromPhonebookError]: (_, { payload }) => payload,\n  [actions.getPhonebookContactsRequest]: () => \"\",\n  [actions.addToPhonebookRequest]: () => \"\",\n  [actions.removeFromPhonebookRequest]: () => \"\",\n});\n\nexport default combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n  error,\n});\n\n// const initialState = {\n//   contacts: {\n//     items: [],\n//     filter: \"\",\n//   },\n// };\n\n// const itemsReducer = (\n//   store = initialState.contacts.items,\n//   { type, payload }\n// ) => {\n//   switch (type) {\n//     case types.ADD_TO_PHONEBOOK:\n//       const newContact = { ...payload, id: generate() };\n//       return [...store, newContact];\n\n//     case types.REMOVE_FROM_PHONEBOOK:\n//       const updateContacts = store.filter((item) => item.id !== payload);\n//       return updateContacts;\n\n//     default:\n//       return store;\n//   }\n// };\n\n// const filterReducer = (\n//   store = initialState.contacts.filter,\n//   { type, payload }\n// ) => {\n//   switch (type) {\n//     case types.FILTER_PHONEBOOK:\n//       return payload;\n\n//     default:\n//       return store;\n//   }\n// };\n","import authTypes from \"./auth-types\";\nimport { combineReducers } from \"redux\";\n\nconst initialState = {\n  user: {\n    name: null,\n    email: null,\n  },\n  token: null,\n  error: null,\n};\n\nconst userReducer = (state = initialState.user, { type, payload }) => {\n  switch (type) {\n    case authTypes.currentUserSuccess:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nconst tokenReducer = (state = initialState.token, { type, payload }) => {\n  switch (type) {\n    case authTypes.registerSuccess:\n      return payload;\n    case authTypes.loginSuccess:\n      return payload;\n    case authTypes.logOutSuccess:\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  user: userReducer,\n  token: tokenReducer,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport contactsReducer from \"./contacts/reducer\";\n\nimport authReducer from \"./auth/auth-reducer\";\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    auth: persistReducer(authPersistConfig, authReducer),\n  },\n});\n\nexport const persistor = persistStore(store);\n","import { NavLink } from \"react-router-dom\";\nimport styles from \"./Navigation.module.css\";\n\nconst Navigation = () => {\n  return (\n    <nav>\n      <NavLink exact to=\"/\" className={styles.NavLink}>\n        Home\n      </NavLink>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","export const authUserToken = (state) => state.token;\n\n// export const authIsLoggedIn = (state) => state.auth.isLoggedIn;\n\nexport const authUserName = (state) => state.user.name;\n\n// export const getCurrentUser = (state) => state.auth.currentUser;\n","export default __webpack_public_path__ + \"static/media/default-avatar.859f63c2.png\";","import { useDispatch, useSelector } from \"react-redux\";\nimport styles from \"./UserMenu.module.css\";\nimport defaultAvatar from \"./default-avatar.png\";\n\nimport authOperations from \"../../redux/auth/auth-operations\";\nimport { authUserName } from \"../../redux/auth/auth-selectors\";\n// import Phonebook from \"../Phonebook/Phonebook\";\nimport { NavLink } from \"react-router-dom\";\n\nconst UserMenu = () => {\n  const dispatch = useDispatch();\n  const name = useSelector(authUserName);\n  const avatar = defaultAvatar;\n\n  return (\n    <>\n      <div className={styles.Container}>\n        <img src={avatar} alt=\"#\" className={styles.Avatar} />\n        <span className={styles.Name}>Добро пожаловать, {name}</span>\n        <button type=\"button\" onClick={() => dispatch(authOperations.logout())}>\n          Выйти\n        </button>\n      </div>\n      <nav>\n        <NavLink exact to=\"/contacts\" className={styles.NavLink}>\n          Contacts\n        </NavLink>\n      </nav>\n    </>\n  );\n};\n\nexport default UserMenu;\n","import { NavLink } from \"react-router-dom\";\nimport styles from \"./AuthNav.module.css\";\n\nconst AuthNav = () => {\n  return (\n    <nav>\n      <NavLink exact to=\"/register\" className={styles.NavLink}>\n        Register\n      </NavLink>\n      <NavLink exact to=\"/login\" className={styles.NavLink}>\n        Login\n      </NavLink>\n    </nav>\n  );\n};\n\nexport default AuthNav;\n","import Navigation from \"../Navigation/Navigation\";\nimport styles from \"./Header.module.css\";\nimport { authUserToken } from \"../../redux/auth/auth-selectors\";\nimport { useSelector } from \"react-redux\";\nimport UserMenu from \"../UserMenu/UserMenu\";\nimport AuthNav from \"../AuthNav/AuthNav\";\n\nconst Header = () => {\n  const isLoggedIn = useSelector(authUserToken);\n  return (\n    <header className={styles.Header}>\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n};\n\nexport default Header;\n","import { BrowserRouter as Router } from \"react-router-dom\";\n\n// import Phonebook from \"./components/Phonebook/Phonebook\";\nimport Routes from \"./Routes\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport Header from \"./components/Header/Header\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            <Routes />\n          </div>\n        </Router>\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","import { createAction } from \"@reduxjs/toolkit\";\n\nconst getPhonebookContactsRequest = createAction(\"phonebook/get\");\nconst getPhonebookContactsSuccess = createAction(\"phonebook/getSuccess\");\nconst getPhonebookContactsError = createAction(\"phonebook/geterror\");\n\nconst addToPhonebookRequest = createAction(\"phonebook/add\");\nconst addToPhonebookSuccess = createAction(\"phonebook/addSuccess\");\nconst addToPhonebookError = createAction(\"phonebook/addError\");\n\nconst removeFromPhonebookRequest = createAction(\"phonebook/remove\");\nconst removeFromPhonebookSuccess = createAction(\"phonebook/removeSuccess\");\nconst removeFromPhonebookError = createAction(\"phonebook/removeError\");\n\nconst filterPhonebook = createAction(\"phonebok/filter\");\n\nexport default {\n  addToPhonebookRequest,\n  addToPhonebookSuccess,\n  addToPhonebookError,\n\n  removeFromPhonebookRequest,\n  removeFromPhonebookSuccess,\n  removeFromPhonebookError,\n\n  getPhonebookContactsRequest,\n  getPhonebookContactsSuccess,\n  getPhonebookContactsError,\n\n  filterPhonebook,\n};\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://connections-api.herokuapp.com\",\n});\n\nexport const token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nexport const userSignup = async (newUser) => {\n  const { data } = await instance.post(\"/users/signup\", newUser);\n  return data;\n};\n\nexport const userLogin = async (newLogin) => {\n  const { data } = await instance.post(\"/users/login\", newLogin);\n  return data;\n};\n\nexport const userLogout = async (newLogout) => {\n  const { data } = await instance.post(\"/users/logout\", newLogout);\n  return data;\n};\n\nexport const getCurrentUser = async () => {\n  const { data } = await instance.get(\"/users/current\");\n  return data;\n};\n\nexport const getAllContacts = async () => {\n  const { data } = await instance.get(\"/contacts\");\n  return data;\n};\n\nexport const addNewContact = async (newContact) => {\n  const { data } = await instance.post(\"/contacts\", newContact);\n  return data;\n};\n\nexport const removeContact = async (id) => {\n  const { data } = await instance.delete(`contacts/${id}`);\n  return data;\n};\n\nexport default {\n  token,\n\n  getAllContacts,\n  addNewContact,\n  removeContact,\n\n  userSignup,\n  userLogin,\n  userLogout,\n  getCurrentUser,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"UserMenu_Container__2f4HK\",\"Avatar\":\"UserMenu_Avatar__38zOu\",\"Name\":\"UserMenu_Name__1deHt\"};","import authTypes from \"./auth-types\";\n\nconst getLoginStart = () => {\n  return {\n    type: authTypes.loginStart,\n  };\n};\n\nconst getLoginSuccess = (payload) => {\n  return {\n    type: authTypes.loginSuccess,\n    payload,\n  };\n};\n\nconst getLoginError = (payload) => {\n  return {\n    type: authTypes.loginError,\n    payload,\n  };\n};\n\nconst getLogoutStart = () => {\n  return {\n    type: authTypes.logOutStart,\n  };\n};\n\nconst getLogoutSuccess = (payload) => {\n  return {\n    type: authTypes.logOutSuccess,\n    payload,\n  };\n};\n\nconst getLogoutError = (payload) => {\n  return {\n    type: authTypes.logOutError,\n    payload,\n  };\n};\n\nconst getRegisterStart = () => {\n  return {\n    type: authTypes.registerStart,\n  };\n};\n\nconst getRegisterSuccess = (payload) => {\n  return {\n    type: authTypes.registerSuccess,\n    payload,\n  };\n};\n\nconst getRegisterError = (payload) => {\n  return {\n    type: authTypes.registerError,\n    payload,\n  };\n};\n\nconst getCurrentUserStart = () => {\n  return {\n    type: authTypes.currentUserStart,\n  };\n};\n\nconst getCurrentUserSuccess = (payload) => {\n  return {\n    type: authTypes.currentUserSuccess,\n    payload,\n  };\n};\n\nconst getCurrentUserError = (payload) => {\n  return {\n    type: authTypes.currentUserError,\n    payload,\n  };\n};\n\nexport default {\n  getLoginStart,\n  getLoginSuccess,\n  getLoginError,\n\n  getLogoutStart,\n  getLogoutSuccess,\n  getLogoutError,\n\n  getRegisterStart,\n  getRegisterSuccess,\n  getRegisterError,\n\n  getCurrentUserStart,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","// import { createAsyncThunk, isRejectedWithValue } from \"@reduxjs/toolkit\";\nimport api from \"../../api\";\nimport authActions from \"./auth-actions\";\n\nimport { Notify } from \"notiflix/build/notiflix-notify-aio\";\n\n// export const getPhonebook = () => {\n//   const getContacts = async (dispatch, getState) => {\n//     const {\n//       auth: { token },\n//     } = getState();\n//     api.token.set(token);\n//     dispatch(actions.getPhonebookContactsRequest());\n\n//     try {\n//       const data = await api.getAllContacts();\n//       dispatch(actions.getPhonebookContactsSuccess(data));\n//     } catch (error) {\n//       dispatch(actions.getPhonebookContactsError(error));\n//     }\n//   };\n//   return getContacts;\n// };\n\nexport const register = async (newUser) => async (dispatch) => {\n  dispatch(authActions.getRegisterStart());\n  try {\n    const data = await api.userSignup(newUser);\n    api.token.set(data.token);\n    dispatch(authActions.getRegisterSuccess(data));\n  } catch (error) {\n    dispatch(authActions.getRegisterError(error));\n    Notify.failure(\"User is already exist\");\n    return error.response.status;\n  }\n};\n\nexport const login = async (newLogin) => async (dispatch) => {\n  dispatch(authActions.getLoginStart());\n  try {\n    const data = await api.userLogin(newLogin);\n    api.token.set(data.token);\n    dispatch(authActions.getLoginSuccess(data));\n  } catch (error) {\n    dispatch(authActions.getLoginError(error));\n    Notify.failure(\"You enter a wrong login or/and password\");\n    return error.response.status;\n  }\n};\n\n// export const login = createAsyncThunk(\"auth/login\", async (newLogin) => {\n//   try {\n//     const data = await api.userLogin(newLogin);\n//     api.token.set(data.token);\n//     // return data;\n//   } catch (error) {\n//     Notify.failure(\"You enter a wrong login or/and password\");\n//     return error.response.status;\n//   }\n// });\n\nexport const logout = async (newLogout) => async (dispatch) => {\n  dispatch(authActions.getLogoutStart());\n  try {\n    const data = await api.userLogout(newLogout);\n    api.token.unset();\n    dispatch(authActions.getLogoutSuccess(data));\n  } catch (error) {\n    dispatch(authActions.getLogoutError(error));\n    return error.response.status;\n  }\n};\n\n// export const logout = createAsyncThunk(\"auth/logout\", async (newLogout) => {\n//   try {\n//     await api.userLogout(newLogout);\n//     api.token.unset();\n//     // return data;\n//   } catch (error) {\n//     return error.response.status;\n//   }\n// });\n\nexport const getUser = async () => async (dispatch, getState) => {\n  const state = getState();\n  const hasToken = state.auth.token;\n\n  if (hasToken === null) {\n    return;\n  }\n\n  api.token.set(hasToken);\n\n  dispatch(authActions.getCurrentUserStart());\n\n  try {\n    const data = await api.getCurrentUser();\n    dispatch(authActions.getCurrentUserSuccess(data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error));\n    return error.response.status;\n  }\n};\n\n// export const getUser = createAsyncThunk(\"auth/getUser\", async (_, thunkAPI) => {\n//   const state = thunkAPI.getState();\n//   const hasToken = state.auth.token;\n\n//   if (hasToken === null) {\n//     return thunkAPI.rejectWithValue();\n//   }\n\n//   api.token.set(hasToken);\n//   try {\n//     const data = api.getCurrentUser;\n//     return data;\n//   } catch (error) {\n//     return error.response.status;\n//   }\n// });\n\nconst operations = {\n  register,\n  login,\n  logout,\n};\n\nexport default operations;\n\n// export const addToPhonebook = (newContact) => {\n//     const addContacts = async (dispatch) => {\n//       dispatch(actions.addToPhonebookRequest());\n\n//       try {\n//         const data = await api.addNewContact(newContact);\n//         dispatch(actions.addToPhonebookSuccess(data));\n//       } catch (error) {\n//         dispatch(actions.addToPhonebookError(error));\n//       }\n//     };\n//     return addContacts;\n//   };\n","export default {\n  loginStart: \"auth/loginStart\",\n  loginSuccess: \"auth/loginSuccess\",\n  loginError: \"auth/loginError\",\n\n  logOutStart: \"auth/logOutStart\",\n  logOutSuccess: \"auth/logOutSuccess\",\n  logOutError: \"auth/logOutError\",\n\n  registerStart: \"auth/registerStart\",\n  registerSuccess: \"auth/registerSuccess\",\n  registerError: \"auth/registerError\",\n\n  currentUserStart: \"auth/currentUserStart\",\n  currentUserSuccess: \"auth/currentUserSuccess\",\n  currentUserError: \"auth/currentUserError\",\n};\n"],"sourceRoot":""}